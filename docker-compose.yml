version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"  # Backend server
      - "3000:3000"  # Frontend dev server (if running both)
    environment:
      - NODE_ENV=development
      - PORT=5000
      - CLIENT_URL=http://localhost:3000
      - MONGODB_URI=mongodb://mongo:27017/gpt-collab
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRES_IN=7d
      - ENCRYPTION_KEY=your32characterencryptionkeyhere
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - RAPID_API_HOST=judge0-ce.p.rapidapi.com
      - RAPID_API_KEY=${RAPID_API_KEY}
      - RAPID_API_URL=https://judge0-ce.p.rapidapi.com/submissions
    volumes:
      - .:/app
      - /app/node_modules
      - /app/client/node_modules
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    networks:
      - app-network

  # MongoDB database
  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=gpt-collab
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - app-network

  # Redis for caching and sessions (optional but recommended)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - app-network

  # MongoDB Express for database management (development only)
  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - debug

  # Redis Commander for Redis management (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - debug

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge