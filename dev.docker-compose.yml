version: '3.8'

services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: gpt-collab-api
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "${BACKEND_EXPOSE:-5000}:${BACKEND_PORT:-5000}"
    environment:
      - PORT=${BACKEND_PORT:-5000}
      - MONGODB_URI=mongodb://mongo:${MONGODB_PORT:-27017}/${MONGODB_DATABASE:-gpt-collab-dev}
      - NODE_ENV=development
    env_file: ./.env
    volumes:
      - ./backend/src:/app/src
      - ./backend/logs:/app/logs
    networks:
      - gpt-collab-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${BACKEND_PORT:-5000}/api/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: gpt-collab-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_EXPOSE:-3000}:3000"
    env_file: ./.env
    environment:
      - VITE_API_URL=http://localhost:${BACKEND_EXPOSE:-5000}
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - api
    networks:
      - gpt-collab-network

  mongo:
    image: mongo:latest
    container_name: gpt-collab-mongo
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    ports:
      - "${MONGODB_EXPOSE:-27017}:${MONGODB_PORT:-27017}"
    networks:
      - gpt-collab-network
    command: mongod --port ${MONGODB_PORT:-27017}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "${MONGODB_PORT:-27017}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  gpt-collab-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local